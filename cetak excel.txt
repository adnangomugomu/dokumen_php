<?php

use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;

use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Style\Border;
use PhpOffice\PhpSpreadsheet\Style\Color;

defined('BASEPATH') or exit('No direct script access allowed');

class Cetak extends MY_Controller
{

    public function __construct()
    {
        parent::__construct();
    }

    public function rekap_lengkap()
    {
        $query="SELECT * from pkk_tracer_study_peserta_didik";
        $data = $this->db->query("$query")->result();
        $kolom = $this->db->query("SHOW COLUMNS FROM ($query) as t1")->result();
        $judul = array_column($kolom, 'Field');

        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->createSheet(0);
        $sheet->setCellValue('A1', 'Rekap DATA ' . tgl_indo(date('Y-m-d')));
        $sheet->getStyle('A1')->getFont()->setBold(true);
        $alphabet = generateAlphabetArray($judul);
        foreach ($alphabet as $key => $value) $sheet->setCellValue($value . '3', $judul[$key]);

        $awal = 4;
        $no = 1;
        foreach ($data as $row) {
            foreach ($judul as $i => $kol) $sheet->setCellValue(numberToLetter($i) . $awal, $row->{$kol});
            $awal++;
        }
        $awal--;

        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="Rekap_data_' . date('d-m-Y H:i:s') . '.xlsx"');
        header('Cache-Control: max-age=0');
        header('Cache-Control: max-age=1');

        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
        header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
        header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
        header('Pragma: public'); // HTTP/1.0

        $writer = IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
        exit;
    }

    public function permohonan_informasi()
    {
        $data = $this->db->query("SELECT
            a.*,
            b.nama AS nm_kategori,
            c.nama AS nm_peroleh,
            d.nama AS nm_user,
            d.ktp,
            e.nama AS nm_prov,
            e.nama AS nm_kab,
            g.nama AS nm_status,
            h.nama as nm_deputi
        FROM
            permohonan_informasi a
            LEFT JOIN ref_kategori_informasi b ON b.id = a.id_kategori
            LEFT JOIN ref_peroleh_informasi c ON c.id = a.id_peroleh
            LEFT JOIN data_user d ON d.id = a.id_user
            LEFT JOIN ref_provinsi e ON e.kode_wilayah = d.kode_prov
            LEFT JOIN ref_kabupaten f ON f.kode_wilayah = d.kode_kab
            LEFT JOIN ref_status_ppid g ON g.id = a.status 
            left join ref_deputi h on h.id=a.id_deputi
        WHERE
            a.deleted IS NULL 
        ORDER BY
            a.id asc
        ")->result();

        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->createSheet(0);
        $sheet->setCellValue('A1', 'Rekap Permohonan Informasi ' . tgl_indo(date('Y-m-d')));
        $sheet->getStyle('A1')->getFont()->setBold(true);

        $judul = [
            'NO', 'TIPE PEMOHON', 'TIPE WNI', 'NAMA KELOMPOK', 'KATEGORI/INFORMASI YANG DIMINTA', 'INFORMASI YANG DIMINTA', 'CARA MEMPEROLEH',
            'BENTUK INFORMASI', 'ALASAN PERMINTAAN INFORMASI', 'TUJUAN/KEGUNAAN PERMINTAAN INFORMASI', 'STATUS PERMOHONAN', 'DEPUTI TERKAIT',
            'KETERSEDIAAN INFORMASI', 'KETERANGAN VERIFIKASI'
        ];
        $alphabet = generateAlphabetArray($judul);

        foreach ($alphabet as $key => $value) {
            $sheet->setCellValue($value . '3', $judul[$key]);
        }
        $sheet->getStyle('A3:N3')->getFont()->setBold(true);

        $awal = 4;
        $no = 1;
        foreach ($data as $row) {

            $ketersediaan = '';
            if (!empty($row->ketersediaan)) {
                if ($row->ketersediaan == 0) $ketersediaan = 'TIDAK TERSEDIA';
                elseif ($row->ketersediaan == 1) $ketersediaan = 'TERSEDIA';
            }

            $sheet
                ->setCellValue('A' . $awal, $no++)
                ->setCellValue('B' . $awal, $row->tipe)
                ->setCellValue('C' . $awal, $row->wni_tipe)
                ->setCellValue('D' . $awal, $row->nama_kelompok)
                ->setCellValue('E' . $awal, $row->nm_kategori)
                ->setCellValue('F' . $awal, $row->informasi)
                ->setCellValue('G' . $awal, $row->nm_peroleh)
                ->setCellValue('H' . $awal, $row->bentuk)
                ->setCellValue('I' . $awal, $row->alasan)
                ->setCellValue('J' . $awal, $row->tujuan)
                ->setCellValue('K' . $awal, $row->nm_status)
                ->setCellValue('L' . $awal, $row->nm_deputi)
                ->setCellValue('M' . $awal, $ketersediaan)
                ->setCellValue('N' . $awal, $row->keterangan_verif);
            $awal++;
        }
        $awal--;

        $sheet->getStyle('A3:N' . $awal)->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);
        foreach ($alphabet as $key => $value) {
            if (!in_array($value, ['A'])) $sheet->getColumnDimension($value)->setAutoSize(true);
        }

        $sheet->getStyle('C4:C' . $awal)->getAlignment()->setHorizontal(\PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_LEFT);
        $sheet->getStyle('T4:X' . $awal)->getAlignment()->setHorizontal(\PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_RIGHT);

        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="Rekap_permohonan_informasi_' . date('d-m-Y H:i:s') . '.xlsx"');
        header('Cache-Control: max-age=0');
        header('Cache-Control: max-age=1');

        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
        header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
        header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
        header('Pragma: public'); // HTTP/1.0

        $writer = IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
        exit;
    }
}
